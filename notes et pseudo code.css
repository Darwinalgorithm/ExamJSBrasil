/*ICI COMMENTAIRES GENERAUX ET PSEUDO CODE
J'ai réservé ici ce fichier css pour les notes afin de ne pas perturber mon code !

Il s'agira ici de faire un site relatif au restaurant brésilien et de témoigner par cet
exercice du niveau de compréhension, de cohérence et de maîtrise des différents 
langages abordés jusqu'ici. 

Une attention particulière sera donnée à l'égard du travail
préparatoire, du dessin, du pseudo code. Un autre élément fondamental doit être aussi rappelé :

au lieu de partir dans tous les sens et de manière peu réfléchie, cet examen doit être
appréhendé sous l'angle de la méthode, du step by step. Ainsi, des problèmes complexes
qui me font perdre mes moyens, dont je ne sais pas par quels bout les prendre, peuvent
être résolus avec de la METHODE. Reprenons donc Descartes :

"Ce n'est pas assez d'avoir l'esprit bon, mais le principal est de l'appliquer bien [...] et ceux qui ne marchent que fort lentement peuvent avancer beaucoup davantage, s'ils suivent toujours le droit chemin, que ne font ceux qui courent et qui s'en éloignent."

Règle d’analyse : “Diviser chacune des difficultés que j’examinerais en autant de parcelles qu’il se pourrait et qu’il serait requis pour les mieux résoudre” (Discours de la méthode, partie IV). Cette règle recommande de décomposer les problèmes en parties plus petites et plus faciles à résoudre, afin de mieux comprendre et de trouver une solution.

Voilà ce que doivent être mes boussoles.

PSEUDO-CODE et commentaires pas à pas :

En premier lieu il va falloir établir la connexion entre nos différents fichiers.

En second lieu il va falloir télécharger le fichier json associé à notre projet, 
crée un répertoire asset pour y stocker les images.

Un travail de veille doit suivre afin de sélectionner un site esthétique.

Une fois se site choisis il s'agira d'en reproduire la structure html (puis css? mais plus tard !! j'ai fauté sur ce point)

Une fois cette structure faite, il faudra rendre se site dynamique en y intégrant les données Json, en bref faire du javascript.

La donnée vient d’être enregistrée et déposée dans mon fichier json. 
Comment est-elle structurée ?

On observe d’abord, probablement dans le header quatre éléments :

(1) le nom commercial “nomCommercial”

(2) “texteAccroche”

(3)”texteBouton”
(4) Promesses client

Ensuite (5/*3) 
on observe une série de 5 plats tous dotés des sous catégories suivantes : nom desc image.

3 services avec nom et description seulement.

Enfin, (3/*4) 
les témoignages sont la partie la plus ramifiée avec 4 sous catégories (prénom expérience commentaire et note)

On fera particulièrement attention à copier coller les éléments de structures de ce tableau.

Avant toute chose nous allons vérifier la qualité et la connexion des données en faisant divers console.log.

Une fois cette vérification faite, sereinement, nous élaborerons notre structure html.
j'ai téléchargé le logo.

Site d'intérêt obrigado, bossa nova grill : https://bossanovagrill.be/ et bossa nova restaurant Olà https://lepaindesucre-lyon.fr/

je chois ensuite la structure générale pour le site. J'opte pour la simplicité.
un header avec le logo, les catégories accueil, services, plats avis clients ou témoignage, un boutons réservation peut-être.
un gros titre avec le slogan et une belle image de rio

une section service en 3*2
une section Plats en 5 ou 6*3
et enfin une section avis client en 3*4

on a pris pas mal de temps à trouver des images, poser des boutons aligner le header, crée une classe ali items center
bref, le style... site images gratuites.
idée de reprendre notre dégradé couleur vert organge qui rappelle la mangue comme élément dynamique à intégrer sur nos 
outils d'actions.

Maintenant que la structure est correcte, alors je charge les données Json avec le fetch dans mon fichier JS.
on a changé auparavant les "-url" il faut enlever les "-" nous a dit ludivine, s'en souvenir ! 

J'ai rencontré beaucoup de difficulté pour la suite. j'ai d'abord eu besoin de clarifier les différents nom que nous
utilisons afin d'avoir une idée précise de leur focntion dans le process, j'ai donc utiliser des noms 
très descriptif, bien qu'un peu longs.
ensuite j'ai réussi à faire diverses transcription du javascript dans différences sections, mais jamais ensemble !!
ma base était la suivante : 
fetch('./restaurant-bresilien.json')
  .then(response => response.json())
  .then(donnee => {

    let ConteneurHTMLService = document.getElementById('containerServices');


    donnee.services.forEach(service => {
      const serviceHTML = `
        <div class="box">
          <h3>${service.nom}</h3>
          <p>${service.desc}</p>
        </div>
      `;
      ConteneurHTMLService.innerHTML += serviceHTML;
    });
  })

document.querySelector("#containerServices").innerHTML+=CarteServiceAdupliquer;
//c'est la formule que Ludivine m'a montré et que j'aime bien car condensée


Mais face à tant de difficulté j'ai utilisée l'IA qui m'a proposé une fonction générale et efficace : 
function ajouterElementsAuDOM(liste, conteneurId, genererHTML) {
  const conteneur = document.querySelector(`#${conteneurId}`);

  // Vide le conteneur pour éviter les doublons
  conteneur.innerHTML = '';

  // Ajoute chaque élément au conteneur
  liste.forEach(item => {
    conteneur.innerHTML += genererHTML(item);
  });
}

-----
Explication pour moi-même :

1. liste : 
Un tableau de données (par exemple, les services, les plats, etc).
2. conteneurId : 
L' #id HTML du conteneur où les éléments doivent être ajoutés (par exemple, containerServices).
3. genererHTML: Une fonction qui prend un élément de la liste et le retourne sous la forme d'un bloc HTML.

const conteneur = document.querySelector(`#${conteneurId}`);

- Prend l'id (conteneurId) et cherche l’élément HTML correspondant dans la page.
- Par exemple, si conteneurId vaut containerServices, alors document.querySelector("#containerServices") retourne l'élément avec cet id, avec les données.

conteneur.innerHTML = '';
Vide tout ce qui se trouve dans le conteneur sélectionné avant d'ajouter les nouveaux éléments.
- Évite les doublons si la fonction est appelée plusieurs fois.
- Par exemple, si on recharge les données sans vider le conteneur, on aura des éléments répétés.
=> Je n'aurais jamais pu trouver cette astuce tout seul, mais c'est intéressent de voir l'ensemble vide, cela me rappelle mes exercices d'il y a longtemps sur excel si, alors (addition par exemple), sinon "ensemble vide".

liste.forEach(item => {
  conteneur.innerHTML += genererHTML(item);
});

- Pour chaque élément (item) de la liste donnée en json :
La fonction genererHTML(item) est appelée pour créer un bloc HTML.
Ce bloc HTML est ajouté au contenu actuel du conteneur (conteneur.innerHTML).

Cette focntionse relance et s'adapte à chaque keys catégorie ou type de donnée ( services, plats, etc.). Elle transforme un élément brut (comme un objet JSON) en une structure HTML prête à être affichée.

Ainsi cette formule apparaît bien plus éléguante que la répétition que j'allais faire. Elle est plus intelligente et peut s'adapter aisément et rapidement à de nouvelles données. Je la garde en tête et la copie dans mon mémo.
--------

  je me suis aussi rendu compte qu'en ne faisant pas les choses dans l'ordre, de haut en bas, j'avais peut-être générer des problèmes.
  En effet comme la catégorie des plats était la plus dense, j'ai voulu la faire à la fin. Or quand cette dernière a été faite, tout s'est débloqué...! c'est que j'ai mis l'id des plats en dernier. 
 je comprends encore la nécdessité de la méthode. je voulais faire du plus simple au plus complexe.
  Mais je me dis que Javascript lisant de haut en bas, j'aurais peut-être bien dû suivre la page normalement.
  Et surtout véritablement terminer pleinement mon HTML avant de partir sur le Javascript !!! #leçon.
  peut-être qu'alors dans ce cas, ma première méthode aurait fonctionné. 

  Quelle joie quand j'ai vu apparaître les images à 1h !
  Quelle satisfaction !


  Je dois à présent redimensionner ces belles images, mieux disposer mes boutons, arrondir le logo, revoir l'image de background, revoir le contraste et la taille des polices. j'aimerai essayer de glisser du son, de la bossa nova dans la page, directement ou avec un icone. et intégrer le flip sur les plats que nous avait montré nicolas, après le hamburger, sur un site, c'était top.
  changer l'image backgroune du main, qqch de plus sombre, pourquoi pas rio la nuit ou feux d'artifices ? la questiond e l'animation va se poser. peut-être reprendre la couleur mangue, le dégradé sur mes boutons, à voir. crevé, mais y a du résultat.
 
5 dec : j'essai d'ajouter des élémentsd'animation sur mes cartes de plats? j'utilise aos, lmais cela ne marche pas.
La procédure implique déjà :
(1) Inclure ceci dans le head :
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">

(2) (a) inclure dans le JS ceci, en deux fois :
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
   
   (b) <script> AOS.init(); </script>
Mais cela ne marche pas, faut-il déplacer le JS initial avec le defer ?? Mais peut-être est-ce du à ma structure html
incomplète pour les plats. Si bien que je pourrais m'étonner que cela apparaissent (en effet ma structure d'accueil
est pour l'heure une simple div !!, dans image et txt !! 
=> essayer avec les services. cela ne marhe pas non plus.
j'entouré la div, il fallait se mettre en dessous et entourer les éléments de la div, mais, comme d'habitude, une 
réussite s'accompagne d'un nouveau problème le texte des donnée n'apparaît plus ! j'ai l'impression qu'il faut déplacer
l'#, mais j'ai un peu peur de déplacer quelque chose qui marchait... ! et ils se comporte in line...
trop dangereux, je vais demander de l'aide et me concentrer sur le html.
dingue mes liens internes au site avec id # ne marchent pas ?!

DONC POUR L'heure pb :
1 avec le header, bouton et logo à modifier, padding, margin, border radius
2 le lien internes id #
3 l'animation aos

nicolas vient de résoudre la plupart de mes problèmes 
l'aos c'est évidemment dans JS !! pas dans le html !!
mes liens étaient mauvais car j'ai répété le #, n'importe quoi...
quand au header du padding dans la nav et une classe ou id spécifique pour le logo.


dingue je n'avais pas le début du header, j'avais du l'effacer par erreur. (et de fait le main était à déplacer)
l'arrivée du header a fait sauter mon image
ajoutant du padding dans la nav, je retrouve mon image feu d'artifice au header.... décidément...
je n'avais pas mesurer l'effet du header...
bon, calmement, allons du plus simple au plus complexe. Régler les problèmes et poser une vidéo dans le hero.
dingue comme je galère à cibler mon logo. au pire j'écris dans sa ligne width
J'ai eu pas mal de difficulté à cause du marger auto dans mes li, à éviter, suis passé au margin left. mais y a tjs de l'espace
entre mon bouton et la droite... pour s'en sortir j'ai joué avec le width du logo et de l'ul. 
bien je n'arrive pas à ciblé mon titre h2, non plus mettre les vidéo en autoplay, et il reste
mes témoignagnes qui ne s'animent pas car le p n'est pas bon comme cible...j'aurais aussi aimé qu'on anime
en mode mangue mes action sur les a. 